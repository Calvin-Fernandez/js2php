opt-in modules at build
use node-commander instead of yargs
json stringify format
get/setters
  'length' in []
  Object.getOwnPropertyDescriptor(array, 'length') //{value: 0, writable: true, enumerable: false, configurable: false}
writeAll -> helper function
new Func(function() {}) should use name where possible
fs:
  readStream encoding
  helpers array to BaseObject?
specify ->toJSON for boxed primitives

build tool:
  debug mode: Func() gets extra param "meta"
    array('source' => 3, 'line' => 4, 'start' => 146, 'end' => 283, 'def' => 'a.b')
    source is an id referencing source file
      $GLOBALS['files_'] = array('path/file1.js', ...)
      $GLOBALS['source_'] = array('var a = 1;', ...)
    line number, source start/end offsets
    def: best-guess name: a.b = function() {}

test:
  encodeURI/decodeURI, escape/unescape
  // decodeURI('%E2%86%97%D4%B6') === '↗Զ'
  function scope stuff including named function expression
  for (i in array) {}
  array set returns value
  parse `for (;;) {}`
  support `string[1]`
  date constructed with no args

Optimizations:
  `x = !a || b;` => `$x = (is($or_ = not($a)) ? $or_ : $b);` #redundant
  `a + 'b'` => `to_string($a) . "b"`

Performance:
  Array::checkInt

String.prototype
  concat, match, search

Array.prototype
  splice, reverse, filter, some, every, map, reduce, reduceRight

Object
  getPrototypeOf, setPrototypeOf
  preventExtensions, isExtensible, seal, isSealed, freeze, isFrozen

Date.prototype
  getDate, getDay, getFullYear, getHours, getMilliseconds, getMinutes, getMonth, getSeconds
  getUTCDate, getUTCDay, getUTCFullYear, getUTCHours, getUTCMilliseconds, getUTCMinutes, getUTCMonth, getUTCSeconds
  setDate, setFullYear, setHours, setMilliseconds, setMinutes, setMonth, setSeconds
  setUTCDate, setUTCFullYear, setUTCHours, setUTCMilliseconds, setUTCMinutes, setUTCMonth, setUTCSeconds
  getTimezoneOffset, getTime, getYear, setTime, setYear
  toDateString, toGMTString, toISOString, toLocaleDateString, toLocaleString, toLocaleTimeString, toTimeString, toUTCString
