browserify tools/transform.js --standalone Transformer -o demo/js/transformer.js
js2php _http.js > build/http.php
php -S 127.0.0.1:8080 build/http.php
rsync -av ../js2php dev:~/

Divergence from JavaScript
  get/setters don't have property descriptors
  cannot implicitly set global from child scope
  doesn't throw on use of undeclared var (ReferenceError: foo is not defined)
  no runtime parsing: eval, new Function()

Compiling:
  {a: 1} -> new Object('a', 1)
  [1, 2] -> new Arr(1, 2)
  /abc/i -> new RegExp('abc', 'i')
  Integer literals to float: 1 -> 1.0
  && and || -> lazy-eval'd ternary `($or_ = a()) ? $or_ : b()`
  operators to functions (_add, _typeof, _instanceof, _eq)
  function () {} -> new Func(function() use (...) {})
  [1, , 3] -> new Arr(1, Arr::$empty, 3)
  for (n in o) {} -> foreach (keys($o) as $n) {}
  return a(), b() -> return _seq(a(), b())

Shorthand:
  can instantiate: $Array->construct()
  can call functions: $func->call($context, $arg1)
  can call methods: $thing->callMethod('foo', $arg1)

Double Quoted Strings:
  \n \r \t \\ \$ \"
  \000 or \x00
  Since 5.2.5: \v = \x0B, \f = \x0C
  Since 5.4: \e = \x1B

Array -> Arr
Boolean -> Bln
Buffer
Date
Error
Function -> Func
Number
Object
RegExp
String -> Str
--
Global -> GlobalObject
NaN
Null
--
Ex (exception wrapper)


------

use $HTTP_RAW_POST_DATA for multipart/form-data
use stream php://input for all else
use fopen, fread

$data = stream_get_contents(STDIN);
--OR--
while(!feof(STDIN)){
    $line = fgets(STDIN);
}


------

Minimal Implementation

all variables and functions => $var
[] => array() --or-- new ArrayObject(array(), ArrayObject::ARRAY_AS_PROPS)
  or use getters/setters so $arr->{0} becomes $arr[0]
{} => createStdClass()
obj.prop => $obj->prop
obj[prop] => $obj->{$prop}
Obj.prop => Obj::prop
built-in functions organized into classes like:
Math.log(num) => Math::log($num)
String.length(str) => String::length($str)
--or--
String(str).length => String::create($str)->length
$(str).length => $_($str)->length
